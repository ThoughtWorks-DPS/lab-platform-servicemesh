---
version: 2.1

executors:
  infra-image:
    docker:
      - image: twdps/di-circleci-infra-image:stable
    shell: secrethub run -- /bin/sh -eo pipefail
      
on-push-master: &on-push-master
  branches:
    only: /master/
  tags:
    ignore: /.*/

# on-tag-master: &on-tag-master
#   branches:
#     ignore: /.*/
#   tags:
#     only: /.*/

commands:
  deploy-istio:
    parameters:
      cluster:
        description: target kubernetes cluster
        type: string
        default: ""
    steps:
      - run:
          name: pull kubeconfig
          command: |
            mkdir ~/.kube
            SECRETHUB_VAR_ENV=<< parameters.cluster >> secrethub inject -i tpl/kubeconfig.tpl -o ~/.kube/config
      - run:
          name: deploy istio with cluster specific values
          command: bash tpl/deploy_istio.sh << parameters.cluster >>
      - run:
          name: deploy external dns
          command: bash tpl/deploy_external_dns.sh << parameters.cluster >>
      - run:
          name: test servicemesh deployment
          command: CLUSTER=<< parameters.cluster >> bats test/platform_servicemesh.bats
      - run:
          name: deploy httpbin and validate
          command: bash tpl/deploy_httpbin.sh << parameters.cluster >>
      - run:
          name: test httpbin traffic
          command: CLUSTER=<< parameters.cluster >> bats test/platform_httpbin.bats
      - run:
          name: deploy cert-manager
          command: bash tpl/deploy_cert_manager.sh << parameters.cluster >>
      # - run:
      #     name: deploy certificates
      #     command: bash tpl/deploy_certificates.sh << parameters.cluster >>          
      - run:
          name: deploy monitoring traffic management
          command: bash tpl/deploy_monitoring_traffic_management.sh << parameters.cluster >>
      - run:
          name: deploy namespace for di-dev
          command: bash tpl/deploy_development_namespaces.sh di-dev
      - run:
          name: test namespace for di-dev
          command: NAMESPACE="di-dev" bats test/dev_namespaces.bats
      - run:
          name: deploy namespace for di-staging
          command: bash tpl/deploy_development_namespaces.sh di-staging
      - run:
          name: test namespace for di-staging
          command: NAMESPACE="di-dev" bats test/dev_namespaces.bats
      - run:
          name: deploy api traffic management for di-dev
          command: bash tpl/deploy_api_traffic_management.sh << parameters.cluster >> di-dev
      - run:
          name: deploy api traffic management for di-staging
          command: bash tpl/deploy_api_traffic_management.sh << parameters.cluster >> di-staging
      - run:
          name: test traffic management
          command: CLUSTER=<< parameters.cluster >> bats test/platform_traffic_management.bats



jobs:
  deployservicemesh:
    executor: infra-image
    parameters:
      cluster:
        description: target kubernetes cluster
        type: string
        default: ""
    steps:
      - checkout
      - setup_remote_docker
      - deploy-istio:
          cluster: << parameters.cluster >>

workflows:
  version: 2

  lab-platform-servicemesh-pipeline:
    jobs:
      - deployservicemesh:
          name: deploy-sandbox-servicemesh
          context: twdps-di
          cluster: sandbox
          filters: *on-push-master
      
      # - deployservicemesh:
      #     name: deploy-preview-servicemesh
      #     context: twdps-di
      #     cluster: preview
      #     filters: *on-tag-master
